# Optionally build with mesh support (requires linking against trimesh library)
option(BUILD_MeshSupport "Build with Mesh support (requires fim library with trimesh2)" OFF)

# Configure Mesh support
if(BUILD_MeshSupport)
  SUBDIRS(fim)
  INCLUDE_DIRECTORIES(fim/trimesh2/include)
  add_definitions(-DSW_USE_MESH)
endif(BUILD_MeshSupport)


OPTION(BUILD_ICPRigid3DRegistration "Build ICPRigid3DRegistration (requires VTK)" ON)
OPTION(BUILD_ShapeWorksView "Build ShapeWorksView (requires FLTK & VTK)" ON)
OPTION(BUILD_ShapeWorksShop "Build ShapeWorksShop (requires FLTK & VTK)" ON)
set(USE_VTK 1)
set(USE_FLTK 1)

# Optionally configure FLTK
IF(USE_FLTK)
  SET(FLTK_SKIP_FORMS 1)
  SET(FLTK_SKIP_IMAGES 1)
  FIND_PACKAGE(FLTK)
  IF(FLTK_FOUND)
    INCLUDE_DIRECTORIES(${FLTK_INCLUDE_DIR})
  ELSE(FLTK_FOUND)
    MESSAGE(FATAL_ERROR "FLTK (The Fast Light Toolkit) is required, but could not be found.")
  ENDIF(FLTK_FOUND)
ENDIF(USE_FLTK)


IF (VTK_FOUND)
  IF (FLTK_FOUND)
    INCLUDE_DIRECTORIES(${SHAPEWORKS_SOURCE_DIR}/VtkFltk)
    SUBDIRS(VtkFltk)
    IF (BUILD_ShapeWorksShop)
      SUBDIRS(ShapeWorksShop)
    ENDIF(BUILD_ShapeWorksShop)
    IF(BUILD_ShapeWorksView)
      SUBDIRS(ShapeWorksView)
      IF(BUILD_PowerCrust)
        INCLUDE(FindPowerCrust.cmake)
        IF(POWERCRUST_FOUND)
          INCLUDE_DIRECTORIES(${POWERCRUST_INCLUDE})
        ELSE(POWERCRUST_FOUND)
          MESSAGE(FATAL_ERROR "POWERCRUST library is required, but could not be found.")
        ENDIF(POWERCRUST_FOUND)
      ENDIF(BUILD_PowerCrust)
    ENDIF(BUILD_ShapeWorksView)
    IF(BUILD_Unsupported)
      SUBDIRS(Unsupported)
    ENDIF(BUILD_Unsupported)
  ENDIF(FLTK_FOUND)
ENDIF(VTK_FOUND)

IF (VTK_FOUND)
  IF (BUILD_ICPRigid3DRegistration)
    SUBDIRS(ICPRigid3DRegistration)
  ENDIF(BUILD_ICPRigid3DRegistration)
ENDIF(VTK_FOUND)


